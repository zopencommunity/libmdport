# bump: libmd-version /LIBMD_VERSION="(.*)"/ https://github.com/guillemj/libmd.git|semver:*
LIBMD_VERSION="1.1.0"

export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_CATEGORIES="security"
export ZOPEN_DEV_URL="https://github.com/guillemj/libmd.git"
export ZOPEN_DEV_DEPS="git make m4 autoconf perl libtool automake bash zoslib tar sed coreutils"
export ZOPEN_STABLE_URL="https://archive.hadrons.org/software/libmd/libmd-$LIBMD_VERSION.tar.xz"
export ZOPEN_STABLE_DEPS="zoslib ctags automake libtool make sed coreutils"
export ZOPEN_COMP="clang"

#export ZOPEN_BOOTSTRAP="./autogen"

zopen_check_results()
{
  dir="$1"
  pfx="$2"
  chk="$1/$2_check.log"

  totalTests=$(grep '# TOTAL:' $chk | awk '{ print $3 }')
  actualFailures=$(grep '# FAIL:' $chk | awk '{ print $3 }')
  expectedFailures=2

  # Echo the following information to gauge build health
  echo "actualFailures:${actualFailures}"
  echo "totalTests:${totalTests}"
  echo "expectedFailures:${expectedFailures}"
}

zopen_append_to_env()
{
cat <<ZZ
if [ ! -z "\$ZOPEN_IN_ZOPEN_BUILD" ]; then
  export ZOPEN_EXTRA_CFLAGS="\${ZOPEN_EXTRA_CFLAGS} -I\$PWD/include"
  export ZOPEN_EXTRA_CXXFLAGS="\${ZOPEN_EXTRA_CXXFLAGS} -I\$PWD/include"
  export ZOPEN_EXTRA_LDFLAGS="\${ZOPEN_EXTRA_LDFLAGS} -L\$PWD/lib"
  export ZOPEN_EXTRA_LIBS="\${ZOPEN_EXTRA_LIBS} -lmd"
fi
ZZ
}

zopen_append_to_setup()
{
  # echo commands that will run when installing via setup.sh
}

zopen_get_version()
{
  echo "$LIBMD_VERSION"
}
